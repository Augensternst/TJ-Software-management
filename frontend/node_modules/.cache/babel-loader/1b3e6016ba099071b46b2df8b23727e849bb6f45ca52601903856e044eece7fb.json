{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.map.js\";\n// @/utils/drawChart.js\nimport Chart from 'chart.js/auto';\nexport const drawChart = (canvasRef, data) => {\n  const ctx = canvasRef.getContext('2d');\n  const baseColor = data.datasets[0].backgroundColor;\n  const colorValues = baseColor.match(/\\d+/g); // 提取颜色值\n  const r = colorValues[0];\n  const g = colorValues[1];\n  const b = colorValues[2];\n  const a = colorValues[3] || 1; // 如果透明度未定义，默认为 1\n\n  // 创建渐变颜色\n  const gradient = ctx.createLinearGradient(0, 0, 0, canvasRef.height);\n  gradient.addColorStop(0, `rgba(${r}, ${g}, ${b}, ${a * 0.8})`);\n  gradient.addColorStop(1, `rgba(${r}, ${g}, ${b}, ${a * 0.1})`);\n  const modifiedData = {\n    ...data,\n    datasets: data.datasets.map(dataset => {\n      return {\n        ...dataset,\n        fill: true,\n        // 填充曲线下方的面积\n        backgroundColor: gradient,\n        borderColor: '#8979FF',\n        // 折线的颜色为紫色\n        pointBorderColor: '#8979FF',\n        // 数据点的边缘颜色为紫色\n        pointBackgroundColor: 'white',\n        // 数据点的内部颜色为白色\n        pointBorderWidth: 1 // 数据点的边缘宽度\n      };\n    })\n  };\n  const chartInstance = new Chart(ctx, {\n    type: 'line',\n    // 图表类型为折线图\n    data: modifiedData,\n    // 使用修改后的数据\n    options: {\n      responsive: true,\n      aspectRatio: 1.5,\n      plugins: {\n        legend: {\n          display: true,\n          // 显示图例\n          position: 'bottom',\n          // 图例放置在底部\n          labels: {\n            color: 'rgba(0, 178, 255,0.95)' // 图例文字颜色为蓝色\n          }\n        }\n      },\n      animation: {\n        duration: 500,\n        // 动画时长\n        easing: 'easeInOutQuad' // 动画效果\n      },\n      elements: {\n        line: {\n          tension: 0.4,\n          // 设置线条的曲率，0 为直线，1 为最大曲率\n          borderWidth: 1 // 线条宽度\n        },\n        point: {\n          radius: 3,\n          // 数据点的大小\n          hoverRadius: 7,\n          // 鼠标悬停时数据点的大小\n          borderWidth: 2 // 数据点的边缘宽度\n        }\n      },\n      scales: {\n        x: {\n          grid: {\n            display: true,\n            // 显示 y 轴的网格线\n            lineWidth: 1,\n            borderDash: [5, 5],\n            // 设置网格线为虚线\n            color: 'rgba(0, 0, 26, 0.15)' // 深蓝色，透明度 0.15\n          },\n          ticks: {\n            color: 'rgba(0, 178, 255,0.95)'\n          }\n        },\n        y: {\n          grid: {\n            borderDash: [5, 5],\n            color: 'rgba(0, 0, 26, 0.15)' // 深蓝色，透明度 0.15\n          },\n          ticks: {\n            color: 'rgba(0, 178, 255,0.95)'\n          }\n        }\n      }\n    }\n  });\n\n  // 动态加载效果\n  let animationProgress = 0;\n  const animationDuration = 500; // 动画时长\n  const animationStep = 10;\n  const animate = () => {\n    if (animationProgress < animationDuration) {\n      animationProgress += animationStep;\n      chartInstance.update(); // 更新图表\n      requestAnimationFrame(animate);\n    }\n  };\n  animate();\n  return chartInstance;\n};","map":{"version":3,"names":["Chart","drawChart","canvasRef","data","ctx","getContext","baseColor","datasets","backgroundColor","colorValues","match","r","g","b","a","gradient","createLinearGradient","height","addColorStop","modifiedData","map","dataset","fill","borderColor","pointBorderColor","pointBackgroundColor","pointBorderWidth","chartInstance","type","options","responsive","aspectRatio","plugins","legend","display","position","labels","color","animation","duration","easing","elements","line","tension","borderWidth","point","radius","hoverRadius","scales","x","grid","lineWidth","borderDash","ticks","y","animationProgress","animationDuration","animationStep","animate","update","requestAnimationFrame"],"sources":["E:/Wuhuairline/frontend/src/utils/drawChart.js"],"sourcesContent":["// @/utils/drawChart.js\nimport Chart from 'chart.js/auto';\n\nexport const drawChart = (canvasRef, data) => {\n  const ctx = canvasRef.getContext('2d');\n  const baseColor=data.datasets[0].backgroundColor;\n\n  const colorValues = baseColor.match(/\\d+/g); // 提取颜色值\n  const r = colorValues[0];\n  const g = colorValues[1];\n  const b = colorValues[2];\n  const a = colorValues[3] || 1; // 如果透明度未定义，默认为 1\n\n  // 创建渐变颜色\n  const gradient = ctx.createLinearGradient(0,0,0,canvasRef.height);\n  gradient.addColorStop(0, `rgba(${r}, ${g}, ${b}, ${a * 0.8})`);\n  gradient.addColorStop(1, `rgba(${r}, ${g}, ${b}, ${a * 0.1})`);\n\n\n  const modifiedData = {\n    ...data,\n    datasets: data.datasets.map((dataset) => {\n      return {\n        ...dataset,\n        fill: true, // 填充曲线下方的面积\n        backgroundColor:gradient,\n        borderColor: '#8979FF', // 折线的颜色为紫色\n        pointBorderColor: '#8979FF', // 数据点的边缘颜色为紫色\n        pointBackgroundColor: 'white', // 数据点的内部颜色为白色\n        pointBorderWidth: 1, // 数据点的边缘宽度\n\n      };\n    }),\n  };\n\n  const chartInstance = new Chart(ctx, {\n    type: 'line', // 图表类型为折线图\n    data: modifiedData, // 使用修改后的数据\n    options: {\n\n      responsive: true,\n      aspectRatio:1.5,\n      plugins: {\n        legend: {\n          display: true, // 显示图例\n          position: 'bottom', // 图例放置在底部\n          labels: {\n            color: 'rgba(0, 178, 255,0.95)', // 图例文字颜色为蓝色\n          },\n        },\n      },\n      animation: {\n        duration: 500, // 动画时长\n        easing: 'easeInOutQuad', // 动画效果\n      },\n      elements: {\n        line: {\n          tension: 0.4, // 设置线条的曲率，0 为直线，1 为最大曲率\n          borderWidth: 1, // 线条宽度\n        },\n        point: {\n          radius: 3, // 数据点的大小\n          hoverRadius: 7, // 鼠标悬停时数据点的大小\n          borderWidth: 2, // 数据点的边缘宽度\n        },\n      },\n      scales: {\n        x: {\n          grid: {\n            display: true, // 显示 y 轴的网格线\n            lineWidth:1,\n            borderDash: [5, 5], // 设置网格线为虚线\n            color: 'rgba(0, 0, 26, 0.15)', // 深蓝色，透明度 0.15\n          },\n          ticks:{\n            color: 'rgba(0, 178, 255,0.95)'\n          },\n        },\n        y: {\n          grid: {\n            borderDash:[5,5],\n            color: 'rgba(0, 0, 26, 0.15)', // 深蓝色，透明度 0.15\n          },\n          ticks:{\n            color: 'rgba(0, 178, 255,0.95)'\n          },\n        },\n      },\n    },\n  });\n\n  // 动态加载效果\n  let animationProgress = 0;\n  const animationDuration = 500; // 动画时长\n  const animationStep = 10;\n\n\n  const animate = () => {\n    if (animationProgress < animationDuration) {\n      animationProgress += animationStep;\n      chartInstance.update(); // 更新图表\n      requestAnimationFrame(animate);\n    }\n  };\n  animate();\n\n\n  return chartInstance;\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}