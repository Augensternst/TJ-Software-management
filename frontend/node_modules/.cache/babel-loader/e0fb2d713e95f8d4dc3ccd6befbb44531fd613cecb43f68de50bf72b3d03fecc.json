{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.iterator.reduce.js\";\nimport * as echarts from 'echarts';\nimport axios from 'axios';\nconst api = axios.create({\n  baseURL: process.env.VUE_APP_API_URL || 'https://af1f2aee-0858-4e5f-8a9e-6e279126c69d.mock.pstmn.io/api',\n  timeout: 10000\n});\nexport default {\n  name: 'AeroEngineChart',\n  props: {\n    device: {\n      type: Object,\n      default: () => ({\n        id: '#1111',\n        name: '航空发动机 A1'\n      })\n    }\n  },\n  data() {\n    return {\n      chart: null,\n      chartData: [],\n      isLoading: false,\n      errorMessage: ''\n    };\n  },\n  mounted() {\n    this.fetchComponentData();\n    window.addEventListener('resize', this.handleResize);\n  },\n  watch: {\n    // 监听设备ID变化，重新获取数据\n    'device.id': {\n      handler(newVal) {\n        if (newVal) {\n          this.fetchComponentData();\n        }\n      }\n    }\n  },\n  beforeUnmount() {\n    if (this.chart) {\n      this.chart.dispose();\n    }\n    window.removeEventListener('resize', this.handleResize);\n  },\n  methods: {\n    handleResize() {\n      this.chart && this.chart.resize();\n    },\n    // 向后端发起请求获取组件数据\n    async fetchComponentData() {\n      this.isLoading = true;\n      this.errorMessage = '';\n      try {\n        // 使用axios发起GET请求，传递设备ID作为参数\n        const response = await api.get('/device/components', {\n          params: {\n            deviceId: this.device.id\n          }\n        });\n\n        // 假设后端返回的数据格式为 { total: number, components: Array<{name: string, value: number}> }\n        if (response.data && response.data.components) {\n          this.chartData = response.data.components;\n          const totalValue = response.data.total || this.chartData.reduce((sum, item) => sum + item.value, 0);\n          // 获取数据后初始化或更新图表\n          if (this.chart) {\n            this.updateChart(totalValue);\n          } else {\n            this.initChart(totalValue);\n          }\n        }\n      } catch (error) {\n        console.error('获取组件数据失败:', error);\n        this.errorMessage = '获取数据失败，请稍后重试';\n      } finally {\n        this.isLoading = false;\n      }\n    },\n    // 初始化图表\n    initChart(totalValue) {\n      this.chart = echarts.init(this.$refs.chartContainer);\n      this.updateChart(totalValue);\n    },\n    getRandomHexColor() {\n      // 生成格式为 #RRGGBB 的随机颜色\n      return '#' + Math.floor(Math.random() * 16777215).toString(16).padStart(6, '0');\n    },\n    // 更新图表数据\n    updateChart(totalValue) {\n      if (!this.chart) return;\n\n      // 为每个组件数据添加样式信息\n      const colorMap = {\n        '叶片': '#8B5CF6',\n        '燃料器': '#F87171',\n        '风机': '#67E8F9',\n        '旁通管道': '#FCD34D',\n        'LPC': '#60A5FA',\n        'HPT': '#4ADE80',\n        'HPC': '#A78BFA'\n      };\n      const formattedData = this.chartData.map(item => {\n        const color = colorMap[item.name] || this.getRandomHexColor();\n        return {\n          value: item.value,\n          name: item.name,\n          itemStyle: {\n            color\n          },\n          label: {\n            show: true,\n            position: 'outside',\n            color: '#fff',\n            formatter: item.value.toString()\n          },\n          labelLine: {\n            show: true,\n            lineStyle: {\n              color\n            }\n          }\n        };\n      });\n      const option = {\n        title: {\n          text: totalValue.toString(),\n          left: 'center',\n          top: 'center',\n          textStyle: {\n            color: '#fff',\n            fontSize: 24,\n            fontWeight: 'bold'\n          }\n        },\n        grid: {\n          left: '3%',\n          right: '20%',\n          bottom: '7%',\n          top: '4%',\n          containLabel: true\n        },\n        tooltip: {\n          trigger: 'item'\n        },\n        legend: {\n          right: \"right\",\n          bottom: 'center',\n          textStyle: {\n            color: '#eee'\n          },\n          itemHeight: 10,\n          itemWidth: 10,\n          icon: 'circle'\n        },\n        series: [{\n          type: 'pie',\n          radius: ['30%', '80%'],\n          avoidLabelOverlap: true,\n          label: {\n            show: true,\n            position: 'outside',\n            formatter: '{value}',\n            color: '#fff',\n            fontSize: 14,\n            lineHeight: 20,\n            alignTo: 'edge',\n            edgeDistance: '15%',\n            distanceToLabelLine: 5\n          },\n          labelLine: {\n            show: true,\n            length: 4,\n            length2: 100,\n            smooth: false,\n            lineStyle: {\n              width: 1,\n              type: 'solid',\n              color: '#fff'\n            }\n          },\n          data: formattedData,\n          emphasis: {\n            label: {\n              show: true,\n              fontSize: 16,\n              fontWeight: 'bold'\n            }\n          }\n        }]\n      };\n      this.chart.setOption(option);\n    }\n  }\n};","map":{"version":3,"names":["echarts","axios","api","create","baseURL","process","env","VUE_APP_API_URL","timeout","name","props","device","type","Object","default","id","data","chart","chartData","isLoading","errorMessage","mounted","fetchComponentData","window","addEventListener","handleResize","watch","handler","newVal","beforeUnmount","dispose","removeEventListener","methods","resize","response","get","params","deviceId","components","totalValue","total","reduce","sum","item","value","updateChart","initChart","error","console","init","$refs","chartContainer","getRandomHexColor","Math","floor","random","toString","padStart","colorMap","formattedData","map","color","itemStyle","label","show","position","formatter","labelLine","lineStyle","option","title","text","left","top","textStyle","fontSize","fontWeight","grid","right","bottom","containLabel","tooltip","trigger","legend","itemHeight","itemWidth","icon","series","radius","avoidLabelOverlap","lineHeight","alignTo","edgeDistance","distanceToLabelLine","length","length2","smooth","width","emphasis","setOption"],"sources":["E:\\Wuhuairline\\frontend\\src\\components\\CircularDiagram.vue"],"sourcesContent":["<template>\n  <div ref=\"chartContainer\" class=\"chart-container\"></div>\n</template>\n\n<script>\nimport * as echarts from 'echarts'\nimport axios from 'axios'\n\nconst api = axios.create({\n  baseURL: process.env.VUE_APP_API_URL || 'https://af1f2aee-0858-4e5f-8a9e-6e279126c69d.mock.pstmn.io/api',\n  timeout: 10000\n})\nexport default {\n  name: 'AeroEngineChart',\n  props: {\n    device: {\n      type: Object,\n      default: () => ({\n        id: '#1111',\n        name: '航空发动机 A1'\n      })\n    }\n  },\n  data() {\n    return {\n      chart: null,\n      chartData: [],\n      isLoading: false,\n      errorMessage: ''\n    }\n  },\n  mounted() {\n    this.fetchComponentData();\n    window.addEventListener('resize', this.handleResize);\n  },\n  watch: {\n    // 监听设备ID变化，重新获取数据\n    'device.id': {\n      handler(newVal) {\n        if (newVal) {\n          this.fetchComponentData();\n        }\n      }\n    }\n  },\n  beforeUnmount() {\n    if (this.chart) {\n      this.chart.dispose();\n    }\n    window.removeEventListener('resize', this.handleResize);\n  },\n  methods: {\n    handleResize() {\n      this.chart && this.chart.resize()\n    },\n\n    // 向后端发起请求获取组件数据\n    async fetchComponentData() {\n      this.isLoading = true;\n      this.errorMessage = '';\n\n      try {\n        // 使用axios发起GET请求，传递设备ID作为参数\n        const response = await api.get('/device/components', {\n          params: {\n            deviceId: this.device.id\n          }\n        });\n\n        // 假设后端返回的数据格式为 { total: number, components: Array<{name: string, value: number}> }\n        if (response.data && response.data.components) {\n          this.chartData = response.data.components;\n          const totalValue = response.data.total || this.chartData.reduce((sum, item) => sum + item.value, 0);\n          // 获取数据后初始化或更新图表\n          if (this.chart) {\n            this.updateChart(totalValue);\n          } else {\n            this.initChart(totalValue);\n          }\n        }\n      } catch (error) {\n        console.error('获取组件数据失败:', error);\n        this.errorMessage = '获取数据失败，请稍后重试';\n      } finally {\n        this.isLoading = false;\n      }\n    },\n\n    // 初始化图表\n    initChart(totalValue) {\n      this.chart = echarts.init(this.$refs.chartContainer);\n      this.updateChart(totalValue);\n    },\n    getRandomHexColor() {\n      // 生成格式为 #RRGGBB 的随机颜色\n      return '#' + Math.floor(Math.random() * 16777215).toString(16).padStart(6, '0');\n    },\n    // 更新图表数据\n    updateChart(totalValue) {\n      if (!this.chart) return;\n\n      // 为每个组件数据添加样式信息\n      const colorMap = {\n        '叶片': '#8B5CF6',\n        '燃料器': '#F87171',\n        '风机': '#67E8F9',\n        '旁通管道': '#FCD34D',\n        'LPC': '#60A5FA',\n        'HPT': '#4ADE80',\n        'HPC': '#A78BFA'\n      };\n\n      const formattedData = this.chartData.map((item) => {\n        const color = colorMap[item.name] || this.getRandomHexColor();\n\n        return {\n          value: item.value,\n          name: item.name,\n          itemStyle: {color},\n          label: {\n            show: true,\n            position: 'outside',\n            color: '#fff',\n            formatter: item.value.toString(),\n          },\n          labelLine: {\n            show: true,\n            lineStyle: {\n              color\n            }\n          }\n        };\n      });\n\n      const option = {\n        title: {\n          text: totalValue.toString(),\n          left: 'center',\n          top: 'center',\n          textStyle: {\n            color: '#fff',\n            fontSize: 24,\n            fontWeight: 'bold'\n          }\n        },\n        grid: {\n          left: '3%',\n          right: '20%',\n          bottom: '7%',\n          top: '4%',\n          containLabel: true\n        },\n        tooltip: {\n          trigger: 'item'\n        },\n        legend: {\n          right: \"right\",\n          bottom: 'center',\n          textStyle: {color: '#eee'},\n          itemHeight: 10,\n          itemWidth: 10,\n          icon: 'circle',\n        },\n        series: [\n          {\n            type: 'pie',\n            radius: ['30%', '80%'],\n            avoidLabelOverlap: true,\n            label: {\n              show: true,\n              position: 'outside',\n              formatter: '{value}',\n              color: '#fff',\n              fontSize: 14,\n              lineHeight: 20,\n              alignTo: 'edge',\n              edgeDistance: '15%',\n              distanceToLabelLine: 5\n            },\n            labelLine: {\n              show: true,\n              length: 4,\n              length2: 100,\n              smooth: false,\n              lineStyle: {\n                width: 1,\n                type: 'solid',\n                color: '#fff'\n              }\n            },\n            data: formattedData,\n            emphasis: {\n              label: {\n                show: true,\n                fontSize: 16,\n                fontWeight: 'bold'\n              }\n            }\n          }\n        ]\n      };\n\n      this.chart.setOption(option);\n    }\n  }\n}\n</script>\n\n<style scoped>\n.chart-container {\n  width: 100%;\n  height: 200px;\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}