{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = 'https://your-api-endpoint.com/api';\n\n/**\n * 获取模型列表（支持分页和模糊搜索）\n * @param {number} page - 当前页码\n * @param {number} pageSize - 每页大小\n * @param {string} searchQuery - 搜索关键字\n * @returns {Promise<{ models: { id: number, name: string }[], total: number }>}\n */\nexport const getModels = async (page = 1, pageSize = 10, searchQuery = '') => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/models`, {\n      params: {\n        page,\n        pageSize,\n        searchQuery\n      }\n    });\n    return {\n      models: response.data.models,\n      total: response.data.total\n    };\n  } catch (error) {\n    console.error('Error fetching models:', error);\n    throw error;\n  }\n};\n\n/**\n * 获取设备列表（支持分页和模糊搜索）\n * @param {number} page - 当前页码\n * @param {number} pageSize - 每页大小\n * @param {string} searchQuery - 搜索关键字\n * @returns {Promise<{ devices: { id: number, name: string }[], total: number }>}\n */\nexport const getDevices = async (page = 1, pageSize = 10, searchQuery = '') => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/devices`, {\n      params: {\n        page,\n        pageSize,\n        searchQuery\n      }\n    });\n    return {\n      devices: response.data.devices,\n      total: response.data.total\n    };\n  } catch (error) {\n    console.error('Error fetching devices:', error);\n    throw error;\n  }\n};\n\n/**\n * 提交模拟任务\n * @param {number} modelId - 模型 ID\n * @param {number} deviceId - 设备 ID\n * @param {File} file - 上传的文件\n * @returns {Promise<{ taskId: string }>} - 返回任务 ID\n */\nexport const submitSimulationTask = async (modelId, deviceId, file) => {\n  try {\n    const formData = new FormData();\n    formData.append('modelId', modelId);\n    formData.append('deviceId', deviceId);\n    formData.append('file', file);\n    const response = await axios.post(`${API_BASE_URL}/simulate`, formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error submitting simulation task:', error);\n    throw error;\n  }\n};\n\n/**\n * 获取模拟结果\n * @param {string} taskId - 任务 ID\n * @returns {Promise<{ imageUrl: string, damageLocation: string, lifespan: number, healthIndex: number }>}\n * healthIndex是健康指数\n */\nexport const getSimulationResult = async taskId => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/simulate/${taskId}/result`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching simulation result:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","API_BASE_URL","getModels","page","pageSize","searchQuery","response","get","params","models","data","total","error","console","getDevices","devices","submitSimulationTask","modelId","deviceId","file","formData","FormData","append","post","headers","getSimulationResult","taskId"],"sources":["E:/Wuhuairline/frontend/src/api/dataSimulationApi.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = 'https://your-api-endpoint.com/api';\n\n/**\n * 获取模型列表（支持分页和模糊搜索）\n * @param {number} page - 当前页码\n * @param {number} pageSize - 每页大小\n * @param {string} searchQuery - 搜索关键字\n * @returns {Promise<{ models: { id: number, name: string }[], total: number }>}\n */\nexport const getModels = async (page = 1, pageSize = 10, searchQuery = '') => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/models`, {\n      params: {\n        page,\n        pageSize,\n        searchQuery,\n      },\n    });\n    return {\n      models: response.data.models,\n      total: response.data.total,\n    };\n  } catch (error) {\n    console.error('Error fetching models:', error);\n    throw error;\n  }\n};\n\n/**\n * 获取设备列表（支持分页和模糊搜索）\n * @param {number} page - 当前页码\n * @param {number} pageSize - 每页大小\n * @param {string} searchQuery - 搜索关键字\n * @returns {Promise<{ devices: { id: number, name: string }[], total: number }>}\n */\nexport const getDevices = async (page = 1, pageSize = 10, searchQuery = '') => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/devices`, {\n      params: {\n        page,\n        pageSize,\n        searchQuery,\n      },\n    });\n    return {\n      devices: response.data.devices,\n      total: response.data.total,\n    };\n  } catch (error) {\n    console.error('Error fetching devices:', error);\n    throw error;\n  }\n};\n\n/**\n * 提交模拟任务\n * @param {number} modelId - 模型 ID\n * @param {number} deviceId - 设备 ID\n * @param {File} file - 上传的文件\n * @returns {Promise<{ taskId: string }>} - 返回任务 ID\n */\nexport const submitSimulationTask = async (modelId, deviceId, file) => {\n  try {\n    const formData = new FormData();\n    formData.append('modelId', modelId);\n    formData.append('deviceId', deviceId);\n    formData.append('file', file);\n\n    const response = await axios.post(`${API_BASE_URL}/simulate`, formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error submitting simulation task:', error);\n    throw error;\n  }\n};\n\n/**\n * 获取模拟结果\n * @param {string} taskId - 任务 ID\n * @returns {Promise<{ imageUrl: string, damageLocation: string, lifespan: number, healthIndex: number }>}\n * healthIndex是健康指数\n */\nexport const getSimulationResult = async (taskId) => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/simulate/${taskId}/result`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching simulation result:', error);\n    throw error;\n  }\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAG,mCAAmC;;AAExD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,SAAS,GAAG,MAAAA,CAAOC,IAAI,GAAG,CAAC,EAAEC,QAAQ,GAAG,EAAE,EAAEC,WAAW,GAAG,EAAE,KAAK;EAC5E,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAG,CAAC,GAAGN,YAAY,SAAS,EAAE;MACzDO,MAAM,EAAE;QACNL,IAAI;QACJC,QAAQ;QACRC;MACF;IACF,CAAC,CAAC;IACF,OAAO;MACLI,MAAM,EAAEH,QAAQ,CAACI,IAAI,CAACD,MAAM;MAC5BE,KAAK,EAAEL,QAAQ,CAACI,IAAI,CAACC;IACvB,CAAC;EACH,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAC9C,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAME,UAAU,GAAG,MAAAA,CAAOX,IAAI,GAAG,CAAC,EAAEC,QAAQ,GAAG,EAAE,EAAEC,WAAW,GAAG,EAAE,KAAK;EAC7E,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAG,CAAC,GAAGN,YAAY,UAAU,EAAE;MAC1DO,MAAM,EAAE;QACNL,IAAI;QACJC,QAAQ;QACRC;MACF;IACF,CAAC,CAAC;IACF,OAAO;MACLU,OAAO,EAAET,QAAQ,CAACI,IAAI,CAACK,OAAO;MAC9BJ,KAAK,EAAEL,QAAQ,CAACI,IAAI,CAACC;IACvB,CAAC;EACH,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IAC/C,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMI,oBAAoB,GAAG,MAAAA,CAAOC,OAAO,EAAEC,QAAQ,EAAEC,IAAI,KAAK;EACrE,IAAI;IACF,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,SAAS,EAAEL,OAAO,CAAC;IACnCG,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAEJ,QAAQ,CAAC;IACrCE,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEH,IAAI,CAAC;IAE7B,MAAMb,QAAQ,GAAG,MAAMN,KAAK,CAACuB,IAAI,CAAC,GAAGtB,YAAY,WAAW,EAAEmB,QAAQ,EAAE;MACtEI,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;IACF,OAAOlB,QAAQ,CAACI,IAAI;EACtB,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;IACzD,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMa,mBAAmB,GAAG,MAAOC,MAAM,IAAK;EACnD,IAAI;IACF,MAAMpB,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAG,CAAC,GAAGN,YAAY,aAAayB,MAAM,SAAS,CAAC;IAC7E,OAAOpB,QAAQ,CAACI,IAAI;EACtB,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;IACzD,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}