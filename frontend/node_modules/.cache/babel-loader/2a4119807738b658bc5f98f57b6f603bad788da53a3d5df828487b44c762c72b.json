{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  ref: \"chart\",\n  class: \"chart-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, null, 512 /* NEED_PATCH */);\n}","map":{"version":3,"names":["ref","class","_createElementBlock","_hoisted_1"],"sources":["E:\\Wuhuairline\\frontend\\src\\components\\BarChart.vue"],"sourcesContent":["<script>\nimport * as echarts from \"echarts\";\nimport { onMounted, ref, watch, onBeforeUnmount } from \"vue\";\n\nexport default {\n  props: {\n    chartData: {\n      type: Object,\n      default: () => ({\n        xAxis: ['星期一', '星期二', '星期三', '星期四', '星期五', '星期六', '星期日'],\n        series: [\n          {\n            name: '已处理',\n            data: [0, 0, 0, 0, 0, 0, 0]\n          },\n          {\n            name: '未处理',\n            data: [0, 0, 0, 0, 0, 0, 0]\n          }\n        ]\n      })\n    }\n  },\n  setup(props) {\n    const chart = ref(null);\n    let myChart = null;\n\n    const updateChart = () => {\n      if (!myChart || !chart.value) return;\n\n      // 确保series存在，如果不存在则使用默认值\n      const series = props.chartData.series || [\n        { name: '已处理', data: [0, 0, 0, 0, 0, 0, 0] },\n        { name: '未处理', data: [0, 0, 0, 0, 0, 0, 0] }\n      ];\n\n      // 确保xAxis存在\n      const xAxis = props.chartData.xAxis || ['星期一', '星期二', '星期三', '星期四', '星期五', '星期六', '星期日'];\n\n      const option = {\n        tooltip: {\n          trigger: \"axis\",\n          axisPointer: {\n            type: \"shadow\",\n          },\n        },\n        grid: {\n          left: '3%',\n          right: '3%',\n          bottom: '7%',\n          top: '4%',\n          containLabel: true\n        },\n        legend: {\n          data: series.map(item => item.name),\n          icon: 'rect',\n          left: \"center\",\n          bottom: \"bottom\",\n          textStyle: {\n            color: \"#fff\",\n          },\n          itemHeight: 10,\n        },\n        xAxis: {\n          type: \"category\",\n          data: xAxis,\n          axisLabel: {\n            color: \"#fff\",\n          },\n        },\n        yAxis: {\n          type: \"value\",\n          axisLabel: {\n            color: \"#fff\",\n          },\n        },\n        series: series.map((item, index) => ({\n          name: item.name,\n          type: \"bar\",\n          label: {\n            show: true,\n            position: \"inside\",\n            color: \"#00FDE7\",\n          },\n          itemStyle: {\n            color: index === 0 ? \"#8a85ff\" : \"#ff9999\",\n          },\n          data: item.data || [0, 0, 0, 0, 0, 0, 0],\n        })),\n      };\n\n      // 使用setOption的第二个参数notMerge:true来确保完全刷新图表\n      myChart.setOption(option, true);\n    };\n\n    const initChart = () => {\n      if (!chart.value) return;\n\n      // 确保只初始化一次\n      if (!myChart) {\n        myChart = echarts.init(chart.value);\n\n        // 添加窗口大小变化的监听\n        window.addEventListener(\"resize\", handleResize);\n      }\n\n      // 更新图表数据\n      updateChart();\n    };\n\n    const handleResize = () => {\n      myChart && myChart.resize();\n    };\n\n    onMounted(() => {\n      // 初始化图表\n      initChart();\n    });\n\n    onBeforeUnmount(() => {\n      // 组件销毁前移除事件监听和释放图表实例\n      window.removeEventListener(\"resize\", handleResize);\n      if (myChart) {\n        myChart.dispose();\n        myChart = null;\n      }\n    });\n\n    // 使用深度监听确保检测到嵌套属性的变化\n    watch(() => props.chartData, () => {\n      // 确保图表已初始化\n      if (myChart) {\n        // 直接更新图表\n        updateChart();\n      } else {\n        // 如果图表未初始化，则初始化\n        initChart();\n      }\n    }, { deep: true, immediate: true });\n\n    return {\n      chart,\n    };\n  },\n};\n</script>\n\n<template>\n  <div ref=\"chart\" class=\"chart-container\"></div>\n</template>\n\n<style scoped>\n.chart-container {\n  width: 100%;\n  height: 250px;\n}\n</style>"],"mappings":";;EAoJOA,GAAG,EAAC,OAAO;EAACC,KAAK,EAAC;;;uBAAvBC,mBAAA,CAA+C,OAA/CC,UAA+C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}