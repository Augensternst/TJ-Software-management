{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport { drawHealthChart } from \"@/utils/drawHealthChart\";\nimport { getModels, getDevices, submitSimulationTask, getSimulationResult } from \"@/api/dataSimulationApi\";\nimport SelectDropdown from \"@/components/SelectDropdown.vue\";\nexport default {\n  name: 'DataSimulation',\n  components: {\n    SelectDropdown\n  },\n  data() {\n    return {\n      health_data: 80,\n      // 健康度数据\n      models: [{\n        id: 1,\n        name: \"模型1\"\n      }],\n      // 模型选项\n      devices: [{\n        id: 1,\n        name: \"设备1\"\n      }],\n      // 设备选项\n      selectedModel: null,\n      // 当前选中的模型\n      selectedDevice: null,\n      // 当前选中的设备\n      fileName: '',\n      taskId: null,\n      // 任务 ID\n      simulationResult: null,\n      // 模拟结果\n      isLoading: false,\n      // 是否正在加载\n      isStart: true,\n      // 是否是初始化\n\n      // 通用数据结构\n      selections: {\n        model: {\n          items: [{\n            id: 1,\n            name: \"模型1\"\n          }],\n          // 模型选项\n          selected: null,\n          // 当前选中的模型\n          message: \"选择模型\",\n          searchQuery: '',\n          // 搜索关键字\n          currentPage: 1,\n          // 当前页码\n          pageSize: 5,\n          // 每页大小\n          totalPages: 1 // 总页数\n        },\n        device: {\n          items: [{\n            id: 1,\n            name: \"设备1\"\n          }],\n          // 设备选项\n          selected: null,\n          // 当前选中的设备\n          message: \"选择设备\",\n          searchQuery: '',\n          // 搜索关键字\n          currentPage: 1,\n          // 当前页码\n          pageSize: 5,\n          // 每页大小\n          totalPages: 1 // 总页数\n        }\n      }\n    };\n  },\n  async mounted() {\n    // 初始化加载模型和设备列表（第一页）\n    await this.fetchData('model');\n    await this.fetchData('device');\n  },\n  methods: {\n    // 通用方法 获取数据\n    async fetchData(type) {\n      try {\n        const selection = this.selections[type];\n        const response = await (type === 'model' ? getModels : getDevices)(selection.currentPage, selection.pageSize, selection.searchQuery);\n        selection.items = response[type === 'model' ? 'models' : 'devices'].map(item => ({\n          id: item.id,\n          name: item.name\n        }));\n        selection.totalPages = Math.ceil(response.total / selection.pageSize);\n      } catch (error) {\n        console.error(`Error fetching ${type}:`, error);\n      }\n    },\n    // 通用方法：搜索\n    onSearch(type, query) {\n      const selection = this.selections[type];\n      selection.searchQuery = query;\n      selection.currentPage = 1; // 搜索时重置为第一页\n      this.fetchData(type);\n    },\n    // 通用方法：翻页\n    prevPage(type) {\n      const selection = this.selections[type];\n      if (selection.currentPage > 1) {\n        selection.currentPage--;\n        this.fetchData(type);\n      }\n    },\n    nextPage(type) {\n      const selection = this.selections[type];\n      if (selection.currentPage < selection.totalPages) {\n        selection.currentPage++;\n        this.fetchData(type);\n      }\n    },\n    // 通用方法：选择\n    onSelect(type, command) {\n      const selection = this.selections[type];\n      selection.selected = command;\n      selection.message = command.name;\n      console.log(selection);\n      console.log(`Selected ${type}:`, command);\n    },\n    //   // 获取模型列表\n    // async fetchModels() {\n    //   try {\n    //     const response = await getModels(this.modelCurrentPage, this.modelPageSize, this.modelSearchQuery);\n    //     this.models = response.models.map(model => ({ id: model.id, name: model.name }));\n    //     this.modelTotalPages = Math.ceil(response.total / this.modelPageSize);\n    //   } catch (error) {\n    //     console.error('Error fetching models:', error);\n    //   }\n    // },\n    //   // 获取设备列表\n    // async fetchDevices() {\n    //   try {\n    //     const response = await getDevices(this.deviceCurrentPage, this.devicePageSize, this.deviceSearchQuery);\n    //     this.devices = response.devices.map(device => ({ id: device.id, name: device.name }));\n    //     this.deviceTotalPages = Math.ceil(response.total / this.devicePageSize);\n    //   } catch (error) {\n    //     console.error('Error fetching devices:', error);\n    //   }\n    // },\n    //\n    //   // 模型搜索\n    // onModelSearch(query) {\n    //   this.modelSearchQuery=query;\n    //   this.modelCurrentPage = 1; // 搜索时重置为第一页\n    //   this.fetchModels();\n    // },\n    //\n    // // 设备搜索\n    // onDeviceSearch(query) {\n    //   this.deviceSearchQuery=query;\n    //   this.deviceCurrentPage = 1; // 搜索时重置为第一页\n    //   this.fetchDevices();\n    // },\n    //\n    //   // 模型翻页\n    // prevModelPage() {\n    //   console.log(this.modelCurrentPage);\n    //   if (this.modelCurrentPage > 1) {\n    //     this.modelCurrentPage--;\n    //     this.fetchModels();\n    //   }\n    // },\n    // nextModelPage() {\n    //   if (this.modelCurrentPage < this.modelTotalPages) {\n    //     this.modelCurrentPage++;\n    //     this.fetchModels();\n    //   }\n    // },\n    //\n    //   // 设备翻页\n    // prevDevicePage() {\n    //   if (this.deviceCurrentPage > 1) {\n    //     this.deviceCurrentPage--;\n    //     this.fetchDevices();\n    //   }\n    // },\n    // nextDevicePage() {\n    //   if (this.deviceCurrentPage < this.deviceTotalPages) {\n    //     this.deviceCurrentPage++;\n    //     this.fetchDevices();\n    //   }\n    // },\n    //\n    //\n    // onModelChange(command) {\n    //\n    //   this.selectedModel = command;\n    //   this.modelMessage = command.name;\n    //   console.log('Selected Model:', this.selectedModel);\n    //\n    //\n    // },\n    // onDeviceChange(command) {\n    //\n    //   this.selectedDevice = command;\n    //   this.equipmentMessage = command.name;\n    //   console.log('Selected Device:', this.selectedDevice);\n    //\n    // },\n    triggerFileUpload() {\n      this.$refs.fileInput.click(); // 触发文件选择\n    },\n    handleFileUpload(event) {\n      const file = event.target.files[0];\n      if (file) {\n        console.log('Selected File:', file);\n        this.fileName = file.name;\n      }\n    },\n    // async startSimulation() {\n    //   if (!this.selectedModel || !this.selectedDevice || !this.fileName) {\n    //     alert('请选择模型、设备并上传文件');\n    //     return;\n    //   }\n    //\n    //   this.isLoading = true;\n    //   this.isStart=false;\n    //\n    //   try {\n    //     // 提交模拟任务\n    //     const taskResponse = await submitSimulationTask(\n    //       this.selectedModel.id,\n    //       this.selectedDevice.id,\n    //       this.$refs.fileInput.files[0]\n    //     );\n    //     this.taskId = taskResponse.taskId;\n    //\n    //     // 获取模拟结果\n    //     const resultResponse = await getSimulationResult(this.taskId);\n    //     this.simulationResult = resultResponse;\n    //\n    //     // 更新健康度图表\n    //     if (this.$refs.healthChart) {\n    //       drawHealthChart(this.$refs.healthChart, resultResponse.healthIndex);\n    //     }\n    //   } catch (error) {\n    //     console.error('Error during simulation:', error);\n    //   } finally {\n    //     this.isLoading = false;\n    //   }\n    // },\n\n    async startSimulation() {\n      const {\n        model,\n        device\n      } = this.selections;\n      if (!model.selected || !device.selected || !this.fileName) {\n        alert('请选择模型、设备并上传文件');\n        return;\n      }\n      this.isLoading = true;\n      this.isStart = false;\n      try {\n        const taskResponse = await submitSimulationTask(model.selected.id, device.selected.id, this.$refs.fileInput.files[0]);\n        this.taskId = taskResponse.taskId;\n        const resultResponse = await getSimulationResult(this.taskId);\n        this.simulationResult = resultResponse;\n        if (this.$refs.healthChart) {\n          drawHealthChart(this.$refs.healthChart, resultResponse.healthIndex);\n        }\n      } catch (error) {\n        console.error('Error during simulation:', error);\n      } finally {\n        this.isLoading = false;\n      }\n    }\n  }\n};","map":{"version":3,"names":["drawHealthChart","getModels","getDevices","submitSimulationTask","getSimulationResult","SelectDropdown","name","components","data","health_data","models","id","devices","selectedModel","selectedDevice","fileName","taskId","simulationResult","isLoading","isStart","selections","model","items","selected","message","searchQuery","currentPage","pageSize","totalPages","device","mounted","fetchData","methods","type","selection","response","map","item","Math","ceil","total","error","console","onSearch","query","prevPage","nextPage","onSelect","command","log","triggerFileUpload","$refs","fileInput","click","handleFileUpload","event","file","target","files","startSimulation","alert","taskResponse","resultResponse","healthChart","healthIndex"],"sources":["E:\\Wuhuairline\\frontend\\src\\views\\DataSimulation.vue"],"sourcesContent":["<template>\r\n  <div class=\"data-simulation\">\r\n    <div class=\"content\">\r\n      <div class=\"data-result\">\r\n        <img src=\"@/assets/DataSimulation/uploadData.svg\" alt=\"上传数据\" style=\"width:90%;align-self: center\">\r\n        <div class=\"select\">\r\n          <img src=\"@/assets/DataSimulation/star.svg\" alt=\"star\" style=\"width:3%;align-self: center;\">\r\n          <!-- 选择模型部分 -->\r\n          <div class=\"input\">\r\n            <span class=\"worksans-font\" style=\"text-align: center; align-self: center; padding-left: 5%;\">{{ selections.model.message }}</span>\r\n            <!-- 按钮 -->\r\n            <SelectDropdown\r\n              :placeholder=\"'搜索模型'\"\r\n              :items=\"selections.model.items\"\r\n              :current-page=\"selections.model.currentPage\"\r\n              :total-pages=\"selections.model.totalPages\"\r\n\r\n              @select=\"(command) => onSelect('model', command)\"\r\n              @search=\"(query) => onSearch('model', query)\"\r\n              @prev-page=\"() => prevPage('model')\"\r\n              @next-page=\"() => nextPage('model')\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div class=\"select\">\r\n          <img src=\"@/assets/DataSimulation/puzzle.svg\" alt=\"puzzle\" style=\"width:3%;align-self: center;justify-self: center\">\r\n          <!-- 选择设备部分 -->\r\n          <div class=\"input\">\r\n            <span class=\"worksans-font\" style=\"text-align: center; align-self: center; padding-left: 5%;\" >{{ selections.device.message }}</span>\r\n            <!-- 按钮 -->\r\n            <SelectDropdown\r\n              :placeholder=\"'搜索设备'\"\r\n              :items=\"selections.device.items\"\r\n              :current-page=\"selections.device.currentPage\"\r\n              :total-pages=\"selections.device.totalPages\"\r\n\r\n              @select=\"(command) => onSelect('device', command)\"\r\n              @search=\"(query) => onSearch('device', query)\"\r\n              @prev-page=\"() => prevPage('device')\"\r\n              @next-page=\"() => nextPage('device')\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div class=\"upload-file\" @click=\"triggerFileUpload\">\r\n          <img src=\"@/assets/DataSimulation/gear.svg\" alt=\"puzzle\" style=\"width:3%;align-self: center;justify-self: center\">\r\n          <div style=\"background: #081028;flex:0.8;border-radius: 12px;display: flex;justify-content: center\">\r\n            <!-- 动态显示文件名或 SVG 图片 -->\r\n            <div v-if=\"fileName\" class=\"file-name worksans-font\" style=\"color: #55F0BD; align-self: center;\">\r\n              {{ fileName }}\r\n            </div>\r\n            <img v-else src=\"@/assets/DataSimulation/uploadFile.svg\" alt=\"upload-file\" style=\"width:40%;\">\r\n          </div>\r\n          <input type=\"file\" ref=\"fileInput\" style=\"display: none;\" @change=\"handleFileUpload\" />\r\n        </div>\r\n      </div>\r\n      <div v-if=\"isStart===false\" class=\"data-result\">\r\n        <img src=\"@/assets/DataSimulation/simulationResult.svg\" alt=\"计算结果\" style=\"width:90%;align-self: center\">\r\n        <div class=\"simulation-result\">\r\n          <div class=\"simulation-label worksans-font-green\">器件图片</div>\r\n          <div class=\"simulation-value\">\r\n            <img :src=\"simulationResult?.imageUrl || '@/assets/MonitorCenter/TestImage.png'\" alt=\"器件图片\" style=\"width:15%;align-self: center;justify-self: center;\">\r\n          </div>\r\n        </div>\r\n        <div class=\"simulation-result\">\r\n          <div class=\"simulation-label worksans-font-green\">损伤部位</div>\r\n          <div class=\"simulation-value worksans-font-green\">{{ simulationResult?.damageLocation || '无' }}</div>\r\n        </div>\r\n        <div class=\"simulation-result\">\r\n          <div class=\"simulation-label worksans-font-green\">寿命预测</div>\r\n          <div class=\"simulation-value\">\r\n            <span style=\"font-family: 'Zen Dots', sans-serif;font-size:3vw;color:#55F0BD;\">{{ simulationResult?.lifespan || '0' }}</span>\r\n            <span style=\"color:#55F0BD;align-self: flex-end;margin-left:2%;font-size:1vw\">天</span>\r\n          </div>\r\n        </div>\r\n        <div class=\"simulation-result\" style=\"flex:0.3;\">\r\n          <div class=\"simulation-label worksans-font-green\">健康度</div>\r\n          <div class=\"simulation-value\">\r\n            <canvas ref=\"healthChart\" class=\"simulation-health\"></canvas>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"start-simulation\" @click=\"startSimulation\">\r\n      <img src=\"@/assets/DataSimulation/startSimulation.svg\" alt=\"startSimulation\" style=\"width:15%;align-self: center;justify-self: center;\">\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { drawHealthChart } from \"@/utils/drawHealthChart\";\r\nimport {getModels,getDevices, submitSimulationTask,getSimulationResult} from \"@/api/dataSimulationApi\";\r\nimport SelectDropdown from \"@/components/SelectDropdown.vue\";\r\nexport default {\r\n  name: 'DataSimulation',\r\n  components:{\r\n    SelectDropdown,\r\n  },\r\n  data() {\r\n    return {\r\n      health_data: 80, // 健康度数据\r\n      models: [{id:1,name:\"模型1\"}], // 模型选项\r\n      devices: [{id:1,name:\"设备1\"}], // 设备选项\r\n      selectedModel: null, // 当前选中的模型\r\n      selectedDevice: null, // 当前选中的设备\r\n      fileName: '',\r\n      taskId: null, // 任务 ID\r\n      simulationResult: null, // 模拟结果\r\n      isLoading: false, // 是否正在加载\r\n      isStart:true,// 是否是初始化\r\n\r\n      // 通用数据结构\r\n      selections: {\r\n        model: {\r\n          items: [{ id: 1, name: \"模型1\" }], // 模型选项\r\n          selected: null, // 当前选中的模型\r\n          message: \"选择模型\",\r\n          searchQuery: '', // 搜索关键字\r\n          currentPage: 1, // 当前页码\r\n          pageSize: 5, // 每页大小\r\n          totalPages: 1, // 总页数\r\n        },\r\n        device: {\r\n          items: [{ id: 1, name: \"设备1\" }], // 设备选项\r\n          selected: null, // 当前选中的设备\r\n          message: \"选择设备\",\r\n          searchQuery: '', // 搜索关键字\r\n          currentPage: 1, // 当前页码\r\n          pageSize: 5, // 每页大小\r\n          totalPages: 1, // 总页数\r\n        },\r\n      },\r\n    };\r\n  },\r\n   async mounted() {\r\n    // 初始化加载模型和设备列表（第一页）\r\n      await this.fetchData('model');\r\n      await this.fetchData('device');\r\n\r\n  },\r\n  methods: {\r\n    // 通用方法 获取数据\r\n    async fetchData(type) {\r\n      try {\r\n        const selection = this.selections[type];\r\n        const response = await (type === 'model' ? getModels : getDevices)(\r\n            selection.currentPage,\r\n            selection.pageSize,\r\n            selection.searchQuery\r\n        );\r\n        selection.items = response[type === 'model' ? 'models' : 'devices'].map(item => ({\r\n          id: item.id,\r\n          name: item.name,\r\n        }));\r\n        selection.totalPages = Math.ceil(response.total / selection.pageSize);\r\n      } catch (error) {\r\n        console.error(`Error fetching ${type}:`, error);\r\n      }\r\n    },\r\n\r\n    // 通用方法：搜索\r\n    onSearch(type, query) {\r\n      const selection = this.selections[type];\r\n      selection.searchQuery = query;\r\n      selection.currentPage = 1; // 搜索时重置为第一页\r\n      this.fetchData(type);\r\n    },\r\n// 通用方法：翻页\r\n    prevPage(type) {\r\n      const selection = this.selections[type];\r\n      if (selection.currentPage > 1) {\r\n        selection.currentPage--;\r\n        this.fetchData(type);\r\n      }\r\n    },\r\n\r\n    nextPage(type) {\r\n      const selection = this.selections[type];\r\n      if (selection.currentPage < selection.totalPages) {\r\n        selection.currentPage++;\r\n        this.fetchData(type);\r\n      }\r\n    },\r\n\r\n    // 通用方法：选择\r\n    onSelect(type, command) {\r\n      const selection = this.selections[type];\r\n      selection.selected = command;\r\n      selection.message = command.name;\r\n      console.log(selection);\r\n      console.log(`Selected ${type}:`, command);\r\n    },\r\n\r\n\r\n    //   // 获取模型列表\r\n    // async fetchModels() {\r\n    //   try {\r\n    //     const response = await getModels(this.modelCurrentPage, this.modelPageSize, this.modelSearchQuery);\r\n    //     this.models = response.models.map(model => ({ id: model.id, name: model.name }));\r\n    //     this.modelTotalPages = Math.ceil(response.total / this.modelPageSize);\r\n    //   } catch (error) {\r\n    //     console.error('Error fetching models:', error);\r\n    //   }\r\n    // },\r\n    //   // 获取设备列表\r\n    // async fetchDevices() {\r\n    //   try {\r\n    //     const response = await getDevices(this.deviceCurrentPage, this.devicePageSize, this.deviceSearchQuery);\r\n    //     this.devices = response.devices.map(device => ({ id: device.id, name: device.name }));\r\n    //     this.deviceTotalPages = Math.ceil(response.total / this.devicePageSize);\r\n    //   } catch (error) {\r\n    //     console.error('Error fetching devices:', error);\r\n    //   }\r\n    // },\r\n    //\r\n    //   // 模型搜索\r\n    // onModelSearch(query) {\r\n    //   this.modelSearchQuery=query;\r\n    //   this.modelCurrentPage = 1; // 搜索时重置为第一页\r\n    //   this.fetchModels();\r\n    // },\r\n    //\r\n    // // 设备搜索\r\n    // onDeviceSearch(query) {\r\n    //   this.deviceSearchQuery=query;\r\n    //   this.deviceCurrentPage = 1; // 搜索时重置为第一页\r\n    //   this.fetchDevices();\r\n    // },\r\n    //\r\n    //   // 模型翻页\r\n    // prevModelPage() {\r\n    //   console.log(this.modelCurrentPage);\r\n    //   if (this.modelCurrentPage > 1) {\r\n    //     this.modelCurrentPage--;\r\n    //     this.fetchModels();\r\n    //   }\r\n    // },\r\n    // nextModelPage() {\r\n    //   if (this.modelCurrentPage < this.modelTotalPages) {\r\n    //     this.modelCurrentPage++;\r\n    //     this.fetchModels();\r\n    //   }\r\n    // },\r\n    //\r\n    //   // 设备翻页\r\n    // prevDevicePage() {\r\n    //   if (this.deviceCurrentPage > 1) {\r\n    //     this.deviceCurrentPage--;\r\n    //     this.fetchDevices();\r\n    //   }\r\n    // },\r\n    // nextDevicePage() {\r\n    //   if (this.deviceCurrentPage < this.deviceTotalPages) {\r\n    //     this.deviceCurrentPage++;\r\n    //     this.fetchDevices();\r\n    //   }\r\n    // },\r\n    //\r\n    //\r\n    // onModelChange(command) {\r\n    //\r\n    //   this.selectedModel = command;\r\n    //   this.modelMessage = command.name;\r\n    //   console.log('Selected Model:', this.selectedModel);\r\n    //\r\n    //\r\n    // },\r\n    // onDeviceChange(command) {\r\n    //\r\n    //   this.selectedDevice = command;\r\n    //   this.equipmentMessage = command.name;\r\n    //   console.log('Selected Device:', this.selectedDevice);\r\n    //\r\n    // },\r\n    triggerFileUpload() {\r\n      this.$refs.fileInput.click(); // 触发文件选择\r\n    },\r\n    handleFileUpload(event) {\r\n      const file = event.target.files[0];\r\n      if (file) {\r\n        console.log('Selected File:', file);\r\n        this.fileName = file.name;\r\n      }\r\n    },\r\n\r\n    // async startSimulation() {\r\n    //   if (!this.selectedModel || !this.selectedDevice || !this.fileName) {\r\n    //     alert('请选择模型、设备并上传文件');\r\n    //     return;\r\n    //   }\r\n    //\r\n    //   this.isLoading = true;\r\n    //   this.isStart=false;\r\n    //\r\n    //   try {\r\n    //     // 提交模拟任务\r\n    //     const taskResponse = await submitSimulationTask(\r\n    //       this.selectedModel.id,\r\n    //       this.selectedDevice.id,\r\n    //       this.$refs.fileInput.files[0]\r\n    //     );\r\n    //     this.taskId = taskResponse.taskId;\r\n    //\r\n    //     // 获取模拟结果\r\n    //     const resultResponse = await getSimulationResult(this.taskId);\r\n    //     this.simulationResult = resultResponse;\r\n    //\r\n    //     // 更新健康度图表\r\n    //     if (this.$refs.healthChart) {\r\n    //       drawHealthChart(this.$refs.healthChart, resultResponse.healthIndex);\r\n    //     }\r\n    //   } catch (error) {\r\n    //     console.error('Error during simulation:', error);\r\n    //   } finally {\r\n    //     this.isLoading = false;\r\n    //   }\r\n    // },\r\n\r\n    async startSimulation() {\r\n      const {model, device} = this.selections;\r\n      if (!model.selected || !device.selected || !this.fileName) {\r\n        alert('请选择模型、设备并上传文件');\r\n        return;\r\n      }\r\n\r\n      this.isLoading = true;\r\n      this.isStart = false;\r\n\r\n      try {\r\n        const taskResponse = await submitSimulationTask(\r\n            model.selected.id,\r\n            device.selected.id,\r\n            this.$refs.fileInput.files[0]\r\n        );\r\n        this.taskId = taskResponse.taskId;\r\n\r\n        const resultResponse = await getSimulationResult(this.taskId);\r\n        this.simulationResult = resultResponse;\r\n\r\n        if (this.$refs.healthChart) {\r\n          drawHealthChart(this.$refs.healthChart, resultResponse.healthIndex);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error during simulation:', error);\r\n      } finally {\r\n        this.isLoading = false;\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n@import '@/assets/DataSimulation/DataSimulationStyle.css';\r\n\r\n\r\n</style>"],"mappings":"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b,MAAMC,SAAQ,GAAI,IAAI,CAACd,UAAU,CAACa,IAAI,CAAC;MACvC,IAAIC,SAAS,CAACR,WAAU,GAAIQ,SAAS,CAACN,UAAU,EAAE;QAChDM,SAAS,CAACR,WAAW,EAAE;QACvB,IAAI,CAACK,SAAS,CAACE,IAAI,CAAC;MACtB;IACF,CAAC;IAED;IACAc,QAAQA,CAACd,IAAI,EAAEe,OAAO,EAAE;MACtB,MAAMd,SAAQ,GAAI,IAAI,CAACd,UAAU,CAACa,IAAI,CAAC;MACvCC,SAAS,CAACX,QAAO,GAAIyB,OAAO;MAC5Bd,SAAS,CAACV,OAAM,GAAIwB,OAAO,CAAC1C,IAAI;MAChCoC,OAAO,CAACO,GAAG,CAACf,SAAS,CAAC;MACtBQ,OAAO,CAACO,GAAG,CAAC,YAAYhB,IAAI,GAAG,EAAEe,OAAO,CAAC;IAC3C,CAAC;IAGD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACAE,iBAAiBA,CAAA,EAAG;MAClB,IAAI,CAACC,KAAK,CAACC,SAAS,CAACC,KAAK,CAAC,CAAC,EAAE;IAChC,CAAC;IACDC,gBAAgBA,CAACC,KAAK,EAAE;MACtB,MAAMC,IAAG,GAAID,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;MAClC,IAAIF,IAAI,EAAE;QACRd,OAAO,CAACO,GAAG,CAAC,gBAAgB,EAAEO,IAAI,CAAC;QACnC,IAAI,CAACzC,QAAO,GAAIyC,IAAI,CAAClD,IAAI;MAC3B;IACF,CAAC;IAED;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA,MAAMqD,eAAeA,CAAA,EAAG;MACtB,MAAM;QAACtC,KAAK;QAAEQ;MAAM,IAAI,IAAI,CAACT,UAAU;MACvC,IAAI,CAACC,KAAK,CAACE,QAAO,IAAK,CAACM,MAAM,CAACN,QAAO,IAAK,CAAC,IAAI,CAACR,QAAQ,EAAE;QACzD6C,KAAK,CAAC,eAAe,CAAC;QACtB;MACF;MAEA,IAAI,CAAC1C,SAAQ,GAAI,IAAI;MACrB,IAAI,CAACC,OAAM,GAAI,KAAK;MAEpB,IAAI;QACF,MAAM0C,YAAW,GAAI,MAAM1D,oBAAoB,CAC3CkB,KAAK,CAACE,QAAQ,CAACZ,EAAE,EACjBkB,MAAM,CAACN,QAAQ,CAACZ,EAAE,EAClB,IAAI,CAACwC,KAAK,CAACC,SAAS,CAACM,KAAK,CAAC,CAAC,CAChC,CAAC;QACD,IAAI,CAAC1C,MAAK,GAAI6C,YAAY,CAAC7C,MAAM;QAEjC,MAAM8C,cAAa,GAAI,MAAM1D,mBAAmB,CAAC,IAAI,CAACY,MAAM,CAAC;QAC7D,IAAI,CAACC,gBAAe,GAAI6C,cAAc;QAEtC,IAAI,IAAI,CAACX,KAAK,CAACY,WAAW,EAAE;UAC1B/D,eAAe,CAAC,IAAI,CAACmD,KAAK,CAACY,WAAW,EAAED,cAAc,CAACE,WAAW,CAAC;QACrE;MACF,EAAE,OAAOvB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD,UAAU;QACR,IAAI,CAACvB,SAAQ,GAAI,KAAK;MACxB;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}